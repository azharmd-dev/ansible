- name: functions
  hosts: local
  connection: local
  vars:
    technologies: Shell, Ansible, Git, Terraform #string data
    user_details: # dictionary data
      Azhar: Hyderabad
      Rahul: Chennai
      Vijay: Delhi
    
    user_detail: # list data
     - key: Azhar
       value: Hyderabad
     - key: Rahul
       value: Chennai

    name: Azharuddin Mohammad
    email: Support@GMAIL.COM

    ipaddress: 192.168.0.1 #Valid IP
    invalidip: 267.20.5.60 #Invalid IP

  tasks:
  - name: default variables
    ansible.builtin.debug:
      msg: "Hello, {{ name | default('Rahul')}}" #It will print the Rahul using default variable if the name variable is not mentioned

  - name: convert string to list
    ansible.builtin.debug: 
     msg: "{{ technologies | split(',')}}"
  
  - name: dictionary into a list
    ansible.builtin.debug:
      msg: "{{ user_details | dict2items }}"
    
  - name: list into a dictionary
    ansible.builtin.debug:
      msg: "{{ user_detail | items2dict }}"

# Reading yaml file and converting into a json file
  - name: Read yaml file and take it into variable
    ansible.builtin.set_fact:
      user_yaml: "{{ lookup('file', './userdetails.yaml') | from_yaml }}"
  - name: convert yaml into json
    ansible.builtin.debug:
      msg: "json:: {{ user_yaml | to_nice_json }}"
  - name: copying converted content into a file
    ansible.builtin.copy:
      dest: ./userdetails.json
      content: "{{ user_yaml | to_nice_json }}"

# converting to upper or lower case
  - name: converting to uppper case
    ansible.builtin.debug:
      msg: "{{ name | upper }}"
  
  - name: converting to lower case
    ansible.builtin.debug:
      msg: "{{ email | lower }}"

#To check valid ip or not
  - name: check valid ip or not
    ansible.builtin.debug:
      msg: "{{ ipaddress | ansible.utils.ipv4 }}"

  - name: check valid ip or not
    ansible.builtin.debug:
      msg: "{{ invalidip | ansible.utils.ipv4 }}"